{"ast":null,"code":"(function (global) {\n  'use strict';\n\n  var util = newUtil();\n  var inliner = newInliner();\n  var fontFaces = newFontFaces();\n  var images = newImages(); // Default impl options\n\n  var defaultOptions = {\n    // Default is to fail on error, no placeholder\n    imagePlaceholder: undefined,\n    // Default cache bust is false, it will use the cache\n    cacheBust: false,\n    // Default proxy config is false\n    proxy: false\n  };\n  var domtoimage = {\n    toCanvas: toCanvas,\n    toSvg: toSvg,\n    toPng: toPng,\n    toJpeg: toJpeg,\n    toBlob: toBlob,\n    toPixelData: toPixelData,\n    impl: {\n      fontFaces: fontFaces,\n      images: images,\n      util: util,\n      inliner: inliner,\n      options: {}\n    }\n  };\n  if (typeof module !== 'undefined') module.exports = domtoimage;else global.domtoimage = domtoimage;\n  /**\r\n   * @param {Node} node - The DOM Node object to render\r\n   * @param {Object} options - Rendering options\r\n   * @param {Function} options.filter - Should return true if passed node should be included in the output\r\n   *          (excluding node means excluding it's children as well). Not called on the root node.\r\n   * @param {String} options.bgcolor - color for the background, any valid CSS color value.\r\n   * @param {Number} options.width - width to be applied to node before rendering.\r\n   * @param {Number} options.height - height to be applied to node before rendering.\r\n   * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\r\n   * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\r\n              defaults to 1.0.\r\n   * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\r\n   * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\r\n   * @return {Promise} - A promise that is fulfilled with a SVG image data URL\r\n   * */\n\n  function toSvg(node, options) {\n    options = options || {};\n    copyOptions(options);\n    return Promise.resolve(node).then(function (node) {\n      return cloneNode(node, options.filter, true);\n    }).then(embedFonts).then(inlineImages).then(applyOptions).then(function (clone) {\n      return makeSvgDataUri(clone, options.width || util.width(node), options.height || util.height(node));\n    });\n\n    function applyOptions(clone) {\n      if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n      if (options.width) clone.style.width = options.width + 'px';\n      if (options.height) clone.style.height = options.height + 'px';\n      if (options.style) Object.keys(options.style).forEach(function (property) {\n        clone.style[property] = options.style[property];\n      });\n      return clone;\n    }\n  }\n  /**\r\n   * @param {Node} node - The DOM Node object to render\r\n   * @param {Object} options - Rendering options, @see {@link toSvg}\r\n   * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\r\n   * */\n\n\n  function toPixelData(node, options) {\n    return toCanvas(node, options || {}).then(function (canvas) {\n      return canvas.getContext('2d').getImageData(0, 0, util.width(node), util.height(node)).data;\n    });\n  }\n  /**\r\n   * @param {Node} node - The DOM Node object to render\r\n   * @param {Object} options - Rendering options, @see {@link toSvg}\r\n   * @return {Promise} - A promise that is fulfilled with a PNG image data URL\r\n   * */\n\n\n  function toPng(node, options) {\n    return toCanvas(node, options || {}).then(function (canvas) {\n      return canvas.toDataURL();\n    });\n  }\n  /**\r\n   * @param {Node} node - The DOM Node object to render\r\n   * @param {Object} options - Rendering options, @see {@link toSvg}\r\n   * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\r\n   * */\n\n\n  function toJpeg(node, options) {\n    options = options || {};\n    return toCanvas(node, options).then(function (canvas) {\n      return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n    });\n  }\n  /**\r\n   * @param {Node} node - The DOM Node object to render\r\n   * @param {Object} options - Rendering options, @see {@link toSvg}\r\n   * @return {Promise} - A promise that is fulfilled with a PNG image blob\r\n   * */\n\n\n  function toBlob(node, options) {\n    return toCanvas(node, options || {}).then(util.canvasToBlob);\n  }\n\n  function copyOptions(options) {\n    // Copy options to impl options for use in impl\n    if (typeof options.imagePlaceholder === 'undefined') {\n      domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n    } else {\n      domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n    }\n\n    if (typeof options.cacheBust === 'undefined') {\n      domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n    } else {\n      domtoimage.impl.options.cacheBust = options.cacheBust;\n    }\n\n    if (typeof options.proxy === 'undefined') {\n      domtoimage.impl.options.proxy = defaultOptions.proxy;\n    } else {\n      domtoimage.impl.options.proxy = options.proxy;\n    }\n  }\n\n  function toCanvas(domNode, options) {\n    return toSvg(domNode, options).then(util.makeImage).then(util.delay(100)).then(function (image) {\n      var canvas = newCanvas(domNode);\n      canvas.getContext('2d').drawImage(image, 0, 0);\n      return canvas;\n    });\n\n    function newCanvas(domNode) {\n      var canvas = document.createElement('canvas');\n      canvas.width = options.width || util.width(domNode);\n      canvas.height = options.height || util.height(domNode);\n\n      if (options.bgcolor) {\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = options.bgcolor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n\n      return canvas;\n    }\n  }\n\n  function cloneNode(node, filter, root) {\n    if (!root && filter && !filter(node)) return Promise.resolve();\n    return Promise.resolve(node).then(makeNodeCopy).then(function (clone) {\n      return cloneChildren(node, clone, filter);\n    }).then(function (clone) {\n      return processClone(node, clone);\n    });\n\n    function makeNodeCopy(node) {\n      if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n      return node.cloneNode(false);\n    }\n\n    function cloneChildren(original, clone, filter) {\n      var children = original.childNodes;\n      if (children.length === 0) return Promise.resolve(clone);\n      return cloneChildrenInOrder(clone, util.asArray(children), filter).then(function () {\n        return clone;\n      });\n\n      function cloneChildrenInOrder(parent, children, filter) {\n        var done = Promise.resolve();\n        children.forEach(function (child) {\n          done = done.then(function () {\n            return cloneNode(child, filter);\n          }).then(function (childClone) {\n            if (childClone) parent.appendChild(childClone);\n          });\n        });\n        return done;\n      }\n    }\n\n    function processClone(original, clone) {\n      if (!(clone instanceof Element)) return clone;\n      return Promise.resolve().then(cloneStyle).then(clonePseudoElements).then(copyUserInput).then(fixSvg).then(function () {\n        return clone;\n      });\n\n      function cloneStyle() {\n        copyStyle(window.getComputedStyle(original), clone.style);\n\n        function copyStyle(source, target) {\n          if (source.cssText) target.cssText = source.cssText;else copyProperties(source, target);\n\n          function copyProperties(source, target) {\n            util.asArray(source).forEach(function (name) {\n              target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n            });\n          }\n        }\n      }\n\n      function clonePseudoElements() {\n        [':before', ':after'].forEach(function (element) {\n          clonePseudoElement(element);\n        });\n\n        function clonePseudoElement(element) {\n          var style = window.getComputedStyle(original, element);\n          var content = style.getPropertyValue('content');\n          if (content === '' || content === 'none') return;\n          var className = util.uid();\n          clone.className = clone.className + ' ' + className;\n          var styleElement = document.createElement('style');\n          styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n          clone.appendChild(styleElement);\n\n          function formatPseudoElementStyle(className, element, style) {\n            var selector = '.' + className + ':' + element;\n            var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n            return document.createTextNode(selector + '{' + cssText + '}');\n\n            function formatCssText(style) {\n              var content = style.getPropertyValue('content');\n              return style.cssText + ' content: ' + content + ';';\n            }\n\n            function formatCssProperties(style) {\n              return util.asArray(style).map(formatProperty).join('; ') + ';';\n\n              function formatProperty(name) {\n                return name + ': ' + style.getPropertyValue(name) + (style.getPropertyPriority(name) ? ' !important' : '');\n              }\n            }\n          }\n        }\n      }\n\n      function copyUserInput() {\n        if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n        if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n      }\n\n      function fixSvg() {\n        if (!(clone instanceof SVGElement)) return;\n        clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        if (!(clone instanceof SVGRectElement)) return;\n        ['width', 'height'].forEach(function (attribute) {\n          var value = clone.getAttribute(attribute);\n          if (!value) return;\n          clone.style.setProperty(attribute, value);\n        });\n      }\n    }\n  }\n\n  function embedFonts(node) {\n    return fontFaces.resolveAll().then(function (cssText) {\n      var styleNode = document.createElement('style');\n      node.appendChild(styleNode);\n      styleNode.appendChild(document.createTextNode(cssText));\n      return node;\n    });\n  }\n\n  function inlineImages(node) {\n    return images.inlineAll(node).then(function () {\n      return node;\n    });\n  }\n\n  function makeSvgDataUri(node, width, height) {\n    return Promise.resolve(node).then(function (node) {\n      node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n      return new XMLSerializer().serializeToString(node);\n    }).then(util.escapeXhtml).then(function (xhtml) {\n      return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n    }).then(function (foreignObject) {\n      return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' + foreignObject + '</svg>';\n    }).then(function (svg) {\n      return 'data:image/svg+xml;charset=utf-8,' + svg;\n    });\n  }\n\n  function newUtil() {\n    return {\n      escape: escape,\n      parseExtension: parseExtension,\n      mimeType: mimeType,\n      dataAsUrl: dataAsUrl,\n      isDataUrl: isDataUrl,\n      canvasToBlob: canvasToBlob,\n      resolveUrl: resolveUrl,\n      getAndEncode: getAndEncode,\n      uid: uid(),\n      delay: delay,\n      asArray: asArray,\n      escapeXhtml: escapeXhtml,\n      makeImage: makeImage,\n      width: width,\n      height: height\n    };\n\n    function mimes() {\n      /*\r\n       * Only WOFF and EOT mime types for fonts are 'real'\r\n       * see http://www.iana.org/assignments/media-types/media-types.xhtml\r\n       */\n      var WOFF = 'application/font-woff';\n      var JPEG = 'image/jpeg';\n      return {\n        'woff': WOFF,\n        'woff2': WOFF,\n        'ttf': 'application/font-truetype',\n        'eot': 'application/vnd.ms-fontobject',\n        'png': 'image/png',\n        'jpg': JPEG,\n        'jpeg': JPEG,\n        'gif': 'image/gif',\n        'tiff': 'image/tiff',\n        'svg': 'image/svg+xml'\n      };\n    }\n\n    function parseExtension(url) {\n      var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n      if (match) return match[1];else return '';\n    }\n\n    function mimeType(url) {\n      var extension = parseExtension(url).toLowerCase();\n      return mimes()[extension] || '';\n    }\n\n    function isDataUrl(url) {\n      return url.search(/^(data:)/) !== -1;\n    }\n\n    function toBlob(canvas) {\n      return new Promise(function (resolve) {\n        var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        var length = binaryString.length;\n        var binaryArray = new Uint8Array(length);\n\n        for (var i = 0; i < length; i++) binaryArray[i] = binaryString.charCodeAt(i);\n\n        resolve(new Blob([binaryArray], {\n          type: 'image/png'\n        }));\n      });\n    }\n\n    function canvasToBlob(canvas) {\n      if (canvas.toBlob) return new Promise(function (resolve) {\n        canvas.toBlob(resolve);\n      });\n      return toBlob(canvas);\n    }\n\n    function resolveUrl(url, baseUrl) {\n      var doc = document.implementation.createHTMLDocument();\n      var base = doc.createElement('base');\n      doc.head.appendChild(base);\n      var a = doc.createElement('a');\n      doc.body.appendChild(a);\n      base.href = baseUrl;\n      a.href = url;\n      return a.href;\n    }\n\n    function uid() {\n      var index = 0;\n      return function () {\n        return 'u' + fourRandomChars() + index++;\n\n        function fourRandomChars() {\n          /* see http://stackoverflow.com/a/6248722/2519373 */\n          return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n        }\n      };\n    }\n\n    function makeImage(uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        image.onload = function () {\n          resolve(image);\n        };\n\n        image.onerror = reject;\n        image.src = uri;\n      });\n    }\n\n    function getAndEncode(url) {\n      function getRootUrl() {\n        return window.location.origin ? window.location.origin + '/' : window.location.protocol + '/' + window.location.host + '/';\n      }\n\n      var TIMEOUT = 30000;\n\n      if (domtoimage.impl.options.cacheBust) {\n        // Cache bypass so we dont have CORS issues with cached images\n        // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n        url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n      }\n\n      if (domtoimage.impl.options.proxy) {\n        url = domtoimage.impl.options.proxy + (/^http[s]?\\:\\/\\//.test(url) ? url : getRootUrl() + url);\n      }\n\n      return new Promise(function (resolve) {\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = done;\n        request.ontimeout = timeout;\n        request.responseType = 'blob';\n        request.timeout = TIMEOUT;\n        request.open('GET', url, true);\n        request.send();\n        var placeholder;\n\n        if (domtoimage.impl.options.imagePlaceholder) {\n          var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n\n          if (split && split[1]) {\n            placeholder = split[1];\n          }\n        }\n\n        function done() {\n          if (request.readyState !== 4) return;\n\n          if (request.status !== 200) {\n            if (placeholder) {\n              resolve(placeholder);\n            } else {\n              fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n            }\n\n            return;\n          }\n\n          var encoder = new FileReader();\n\n          encoder.onloadend = function () {\n            var content = encoder.result.split(/,/)[1];\n            resolve(content);\n          };\n\n          encoder.readAsDataURL(request.response);\n        }\n\n        function timeout() {\n          if (placeholder) {\n            resolve(placeholder);\n          } else {\n            fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n          }\n        }\n\n        function fail(message) {\n          console.error(message);\n          resolve('');\n        }\n      });\n    }\n\n    function dataAsUrl(content, type) {\n      return 'data:' + type + ';base64,' + content;\n    }\n\n    function escape(string) {\n      return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    }\n\n    function delay(ms) {\n      return function (arg) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(arg);\n          }, ms);\n        });\n      };\n    }\n\n    function asArray(arrayLike) {\n      var array = [];\n      var length = arrayLike.length;\n\n      for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n\n      return array;\n    }\n\n    function escapeXhtml(string) {\n      return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n    }\n\n    function width(node) {\n      var leftBorder = px(node, 'border-left-width');\n      var rightBorder = px(node, 'border-right-width');\n      return node.scrollWidth + leftBorder + rightBorder;\n    }\n\n    function height(node) {\n      var topBorder = px(node, 'border-top-width');\n      var bottomBorder = px(node, 'border-bottom-width');\n      return node.scrollHeight + topBorder + bottomBorder;\n    }\n\n    function px(node, styleProperty) {\n      var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n      return parseFloat(value.replace('px', ''));\n    }\n  }\n\n  function newInliner() {\n    var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n    return {\n      inlineAll: inlineAll,\n      shouldProcess: shouldProcess,\n      impl: {\n        readUrls: readUrls,\n        inline: inline\n      }\n    };\n\n    function shouldProcess(string) {\n      return string.search(URL_REGEX) !== -1;\n    }\n\n    function readUrls(string) {\n      var result = [];\n      var match;\n\n      while ((match = URL_REGEX.exec(string)) !== null) {\n        result.push(match[1]);\n      }\n\n      return result.filter(function (url) {\n        return !util.isDataUrl(url);\n      });\n    }\n\n    function inline(string, url, baseUrl, get) {\n      return Promise.resolve(url).then(function (url) {\n        return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n      }).then(get || util.getAndEncode).then(function (data) {\n        return util.dataAsUrl(data, util.mimeType(url));\n      }).then(function (dataUrl) {\n        return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n      });\n\n      function urlAsRegex(url) {\n        return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n      }\n    }\n\n    function inlineAll(string, baseUrl, get) {\n      if (nothingToInline()) return Promise.resolve(string);\n      return Promise.resolve(string).then(readUrls).then(function (urls) {\n        var done = Promise.resolve(string);\n        urls.forEach(function (url) {\n          done = done.then(function (string) {\n            return inline(string, url, baseUrl, get);\n          });\n        });\n        return done;\n      });\n\n      function nothingToInline() {\n        return !shouldProcess(string);\n      }\n    }\n  }\n\n  function newFontFaces() {\n    return {\n      resolveAll: resolveAll,\n      impl: {\n        readAll: readAll\n      }\n    };\n\n    function resolveAll() {\n      return readAll(document).then(function (webFonts) {\n        return Promise.all(webFonts.map(function (webFont) {\n          return webFont.resolve();\n        }));\n      }).then(function (cssStrings) {\n        return cssStrings.join('\\n');\n      });\n    }\n\n    function readAll() {\n      return Promise.resolve(util.asArray(document.styleSheets)).then(getCssRules).then(selectWebFontRules).then(function (rules) {\n        return rules.map(newWebFont);\n      });\n\n      function selectWebFontRules(cssRules) {\n        return cssRules.filter(function (rule) {\n          return rule.type === CSSRule.FONT_FACE_RULE;\n        }).filter(function (rule) {\n          return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n        });\n      }\n\n      function getCssRules(styleSheets) {\n        var cssRules = [];\n        styleSheets.forEach(function (sheet) {\n          try {\n            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n          }\n        });\n        return cssRules;\n      }\n\n      function newWebFont(webFontRule) {\n        return {\n          resolve: function resolve() {\n            var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n            return inliner.inlineAll(webFontRule.cssText, baseUrl);\n          },\n          src: function () {\n            return webFontRule.style.getPropertyValue('src');\n          }\n        };\n      }\n    }\n  }\n\n  function newImages() {\n    return {\n      inlineAll: inlineAll,\n      impl: {\n        newImage: newImage\n      }\n    };\n\n    function newImage(element) {\n      return {\n        inline: inline\n      };\n\n      function inline(get) {\n        if (util.isDataUrl(element.src)) return Promise.resolve();\n        return Promise.resolve(element.src).then(get || util.getAndEncode).then(function (data) {\n          return util.dataAsUrl(data, util.mimeType(element.src));\n        }).then(function (dataUrl) {\n          return new Promise(function (resolve, reject) {\n            element.onload = resolve;\n            element.onerror = reject;\n            element.src = dataUrl;\n          });\n        });\n      }\n    }\n\n    function inlineAll(node) {\n      if (!(node instanceof Element)) return Promise.resolve(node);\n      return inlineBackground(node).then(function () {\n        if (node instanceof HTMLImageElement) return newImage(node).inline();else return Promise.all(util.asArray(node.childNodes).map(function (child) {\n          return inlineAll(child);\n        }));\n      });\n\n      function inlineBackground(node) {\n        var background = node.style.getPropertyValue('background');\n        if (!background) return Promise.resolve(node);\n        return inliner.inlineAll(background).then(function (inlined) {\n          node.style.setProperty('background', inlined, node.style.getPropertyPriority('background'));\n        }).then(function () {\n          return node;\n        });\n      }\n    }\n  }\n})(this);","map":{"version":3,"names":["global","util","newUtil","inliner","newInliner","fontFaces","newFontFaces","images","newImages","defaultOptions","imagePlaceholder","undefined","cacheBust","proxy","domtoimage","toCanvas","toSvg","toPng","toJpeg","toBlob","toPixelData","impl","options","module","exports","node","copyOptions","Promise","resolve","then","cloneNode","filter","embedFonts","inlineImages","applyOptions","clone","makeSvgDataUri","width","height","bgcolor","style","backgroundColor","Object","keys","forEach","property","canvas","getContext","getImageData","data","toDataURL","quality","canvasToBlob","domNode","makeImage","delay","image","newCanvas","drawImage","document","createElement","ctx","fillStyle","fillRect","root","makeNodeCopy","cloneChildren","processClone","HTMLCanvasElement","original","children","childNodes","length","cloneChildrenInOrder","asArray","parent","done","child","childClone","appendChild","Element","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","window","getComputedStyle","source","target","cssText","copyProperties","name","setProperty","getPropertyValue","getPropertyPriority","element","clonePseudoElement","content","className","uid","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","createTextNode","map","formatProperty","join","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","resolveAll","styleNode","inlineAll","XMLSerializer","serializeToString","escapeXhtml","xhtml","foreignObject","svg","escape","parseExtension","mimeType","dataAsUrl","isDataUrl","resolveUrl","getAndEncode","mimes","WOFF","JPEG","url","match","exec","extension","toLowerCase","search","binaryString","atob","split","binaryArray","Uint8Array","i","charCodeAt","Blob","type","baseUrl","doc","implementation","createHTMLDocument","base","head","a","body","href","index","fourRandomChars","Math","random","pow","toString","slice","uri","reject","Image","onload","onerror","src","getRootUrl","location","origin","protocol","host","TIMEOUT","test","Date","getTime","request","XMLHttpRequest","onreadystatechange","ontimeout","timeout","responseType","open","send","placeholder","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","message","console","error","string","replace","ms","arg","setTimeout","arrayLike","array","push","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","styleProperty","parseFloat","URL_REGEX","shouldProcess","readUrls","inline","get","dataUrl","urlAsRegex","RegExp","nothingToInline","urls","readAll","webFonts","all","webFont","cssStrings","styleSheets","getCssRules","selectWebFontRules","rules","newWebFont","cssRules","rule","CSSRule","FONT_FACE_RULE","sheet","bind","e","log","webFontRule","parentStyleSheet","newImage","inlineBackground","HTMLImageElement","background","inlined"],"sources":["C:/Users/MOKLET-02/Downloads/ukk-frontend-laundry-main/fe/node_modules/dom-to-image/src/dom-to-image.js"],"sourcesContent":["(function (global) {\r\n    'use strict';\r\n\r\n    var util = newUtil();\r\n    var inliner = newInliner();\r\n    var fontFaces = newFontFaces();\r\n    var images = newImages();\r\n\r\n    // Default impl options\r\n    var defaultOptions = {\r\n        // Default is to fail on error, no placeholder\r\n        imagePlaceholder: undefined,\r\n        // Default cache bust is false, it will use the cache\r\n        cacheBust: false,\r\n        // Default proxy config is false\r\n        proxy: false\r\n    };\r\n\r\n    var domtoimage = {\r\n        toCanvas: toCanvas,\r\n        toSvg: toSvg,\r\n        toPng: toPng,\r\n        toJpeg: toJpeg,\r\n        toBlob: toBlob,\r\n        toPixelData: toPixelData,\r\n        impl: {\r\n            fontFaces: fontFaces,\r\n            images: images,\r\n            util: util,\r\n            inliner: inliner,\r\n            options: {}\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined')\r\n        module.exports = domtoimage;\r\n    else\r\n        global.domtoimage = domtoimage;\r\n\r\n\r\n    /**\r\n     * @param {Node} node - The DOM Node object to render\r\n     * @param {Object} options - Rendering options\r\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\r\n     *          (excluding node means excluding it's children as well). Not called on the root node.\r\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\r\n     * @param {Number} options.width - width to be applied to node before rendering.\r\n     * @param {Number} options.height - height to be applied to node before rendering.\r\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\r\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\r\n                defaults to 1.0.\r\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\r\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\r\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\r\n     * */\r\n    function toSvg(node, options) {\r\n        options = options || {};\r\n        copyOptions(options);\r\n        return Promise.resolve(node)\r\n            .then(function (node) {\r\n                return cloneNode(node, options.filter, true);\r\n            })\r\n            .then(embedFonts)\r\n            .then(inlineImages)\r\n            .then(applyOptions)\r\n            .then(function (clone) {\r\n                return makeSvgDataUri(clone,\r\n                    options.width || util.width(node),\r\n                    options.height || util.height(node)\r\n                );\r\n            });\r\n\r\n        function applyOptions(clone) {\r\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\r\n\r\n            if (options.width) clone.style.width = options.width + 'px';\r\n            if (options.height) clone.style.height = options.height + 'px';\r\n\r\n            if (options.style)\r\n                Object.keys(options.style).forEach(function (property) {\r\n                    clone.style[property] = options.style[property];\r\n                });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Node} node - The DOM Node object to render\r\n     * @param {Object} options - Rendering options, @see {@link toSvg}\r\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\r\n     * */\r\n    function toPixelData(node, options) {\r\n        return toCanvas(node, options || {})\r\n            .then(function (canvas) {\r\n                return canvas.getContext('2d').getImageData(\r\n                    0,\r\n                    0,\r\n                    util.width(node),\r\n                    util.height(node)\r\n                ).data;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @param {Node} node - The DOM Node object to render\r\n     * @param {Object} options - Rendering options, @see {@link toSvg}\r\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\r\n     * */\r\n    function toPng(node, options) {\r\n        return toCanvas(node, options || {})\r\n            .then(function (canvas) {\r\n                return canvas.toDataURL();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @param {Node} node - The DOM Node object to render\r\n     * @param {Object} options - Rendering options, @see {@link toSvg}\r\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\r\n     * */\r\n    function toJpeg(node, options) {\r\n        options = options || {};\r\n        return toCanvas(node, options)\r\n            .then(function (canvas) {\r\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @param {Node} node - The DOM Node object to render\r\n     * @param {Object} options - Rendering options, @see {@link toSvg}\r\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\r\n     * */\r\n    function toBlob(node, options) {\r\n        return toCanvas(node, options || {})\r\n            .then(util.canvasToBlob);\r\n    }\r\n\r\n    function copyOptions(options) {\r\n        // Copy options to impl options for use in impl\r\n        if(typeof(options.imagePlaceholder) === 'undefined') {\r\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\r\n        } else {\r\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\r\n        }\r\n\r\n        if(typeof(options.cacheBust) === 'undefined') {\r\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\r\n        } else {\r\n            domtoimage.impl.options.cacheBust = options.cacheBust;\r\n        }\r\n\r\n        if(typeof(options.proxy) === 'undefined') {\r\n          domtoimage.impl.options.proxy = defaultOptions.proxy;\r\n        } else {\r\n          domtoimage.impl.options.proxy = options.proxy;\r\n        }\r\n    }\r\n\r\n    function toCanvas(domNode, options) {\r\n        return toSvg(domNode, options)\r\n            .then(util.makeImage)\r\n            .then(util.delay(100))\r\n            .then(function (image) {\r\n                var canvas = newCanvas(domNode);\r\n                canvas.getContext('2d').drawImage(image, 0, 0);\r\n                return canvas;\r\n            });\r\n\r\n        function newCanvas(domNode) {\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = options.width || util.width(domNode);\r\n            canvas.height = options.height || util.height(domNode);\r\n\r\n            if (options.bgcolor) {\r\n                var ctx = canvas.getContext('2d');\r\n                ctx.fillStyle = options.bgcolor;\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            return canvas;\r\n        }\r\n    }\r\n\r\n    function cloneNode(node, filter, root) {\r\n        if (!root && filter && !filter(node)) return Promise.resolve();\r\n\r\n        return Promise.resolve(node)\r\n            .then(makeNodeCopy)\r\n            .then(function (clone) {\r\n                return cloneChildren(node, clone, filter);\r\n            })\r\n            .then(function (clone) {\r\n                return processClone(node, clone);\r\n            });\r\n\r\n        function makeNodeCopy(node) {\r\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\r\n            return node.cloneNode(false);\r\n        }\r\n\r\n        function cloneChildren(original, clone, filter) {\r\n            var children = original.childNodes;\r\n            if (children.length === 0) return Promise.resolve(clone);\r\n\r\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\r\n                .then(function () {\r\n                    return clone;\r\n                });\r\n\r\n            function cloneChildrenInOrder(parent, children, filter) {\r\n                var done = Promise.resolve();\r\n                children.forEach(function (child) {\r\n                    done = done\r\n                        .then(function () {\r\n                            return cloneNode(child, filter);\r\n                        })\r\n                        .then(function (childClone) {\r\n                            if (childClone) parent.appendChild(childClone);\r\n                        });\r\n                });\r\n                return done;\r\n            }\r\n        }\r\n\r\n        function processClone(original, clone) {\r\n            if (!(clone instanceof Element)) return clone;\r\n\r\n            return Promise.resolve()\r\n                .then(cloneStyle)\r\n                .then(clonePseudoElements)\r\n                .then(copyUserInput)\r\n                .then(fixSvg)\r\n                .then(function () {\r\n                    return clone;\r\n                });\r\n\r\n            function cloneStyle() {\r\n                copyStyle(window.getComputedStyle(original), clone.style);\r\n\r\n                function copyStyle(source, target) {\r\n                    if (source.cssText) target.cssText = source.cssText;\r\n                    else copyProperties(source, target);\r\n\r\n                    function copyProperties(source, target) {\r\n                        util.asArray(source).forEach(function (name) {\r\n                            target.setProperty(\r\n                                name,\r\n                                source.getPropertyValue(name),\r\n                                source.getPropertyPriority(name)\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            function clonePseudoElements() {\r\n                [':before', ':after'].forEach(function (element) {\r\n                    clonePseudoElement(element);\r\n                });\r\n\r\n                function clonePseudoElement(element) {\r\n                    var style = window.getComputedStyle(original, element);\r\n                    var content = style.getPropertyValue('content');\r\n\r\n                    if (content === '' || content === 'none') return;\r\n\r\n                    var className = util.uid();\r\n                    clone.className = clone.className + ' ' + className;\r\n                    var styleElement = document.createElement('style');\r\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\r\n                    clone.appendChild(styleElement);\r\n\r\n                    function formatPseudoElementStyle(className, element, style) {\r\n                        var selector = '.' + className + ':' + element;\r\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\r\n                        return document.createTextNode(selector + '{' + cssText + '}');\r\n\r\n                        function formatCssText(style) {\r\n                            var content = style.getPropertyValue('content');\r\n                            return style.cssText + ' content: ' + content + ';';\r\n                        }\r\n\r\n                        function formatCssProperties(style) {\r\n\r\n                            return util.asArray(style)\r\n                                .map(formatProperty)\r\n                                .join('; ') + ';';\r\n\r\n                            function formatProperty(name) {\r\n                                return name + ': ' +\r\n                                    style.getPropertyValue(name) +\r\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function copyUserInput() {\r\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\r\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\r\n            }\r\n\r\n            function fixSvg() {\r\n                if (!(clone instanceof SVGElement)) return;\r\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n\r\n                if (!(clone instanceof SVGRectElement)) return;\r\n                ['width', 'height'].forEach(function (attribute) {\r\n                    var value = clone.getAttribute(attribute);\r\n                    if (!value) return;\r\n\r\n                    clone.style.setProperty(attribute, value);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function embedFonts(node) {\r\n        return fontFaces.resolveAll()\r\n            .then(function (cssText) {\r\n                var styleNode = document.createElement('style');\r\n                node.appendChild(styleNode);\r\n                styleNode.appendChild(document.createTextNode(cssText));\r\n                return node;\r\n            });\r\n    }\r\n\r\n    function inlineImages(node) {\r\n        return images.inlineAll(node)\r\n            .then(function () {\r\n                return node;\r\n            });\r\n    }\r\n\r\n    function makeSvgDataUri(node, width, height) {\r\n        return Promise.resolve(node)\r\n            .then(function (node) {\r\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\r\n                return new XMLSerializer().serializeToString(node);\r\n            })\r\n            .then(util.escapeXhtml)\r\n            .then(function (xhtml) {\r\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\r\n            })\r\n            .then(function (foreignObject) {\r\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\r\n                    foreignObject + '</svg>';\r\n            })\r\n            .then(function (svg) {\r\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\r\n            });\r\n    }\r\n\r\n    function newUtil() {\r\n        return {\r\n            escape: escape,\r\n            parseExtension: parseExtension,\r\n            mimeType: mimeType,\r\n            dataAsUrl: dataAsUrl,\r\n            isDataUrl: isDataUrl,\r\n            canvasToBlob: canvasToBlob,\r\n            resolveUrl: resolveUrl,\r\n            getAndEncode: getAndEncode,\r\n            uid: uid(),\r\n            delay: delay,\r\n            asArray: asArray,\r\n            escapeXhtml: escapeXhtml,\r\n            makeImage: makeImage,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        function mimes() {\r\n            /*\r\n             * Only WOFF and EOT mime types for fonts are 'real'\r\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\r\n             */\r\n            var WOFF = 'application/font-woff';\r\n            var JPEG = 'image/jpeg';\r\n\r\n            return {\r\n                'woff': WOFF,\r\n                'woff2': WOFF,\r\n                'ttf': 'application/font-truetype',\r\n                'eot': 'application/vnd.ms-fontobject',\r\n                'png': 'image/png',\r\n                'jpg': JPEG,\r\n                'jpeg': JPEG,\r\n                'gif': 'image/gif',\r\n                'tiff': 'image/tiff',\r\n                'svg': 'image/svg+xml'\r\n            };\r\n        }\r\n\r\n        function parseExtension(url) {\r\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\r\n            if (match) return match[1];\r\n            else return '';\r\n        }\r\n\r\n        function mimeType(url) {\r\n            var extension = parseExtension(url).toLowerCase();\r\n            return mimes()[extension] || '';\r\n        }\r\n\r\n        function isDataUrl(url) {\r\n            return url.search(/^(data:)/) !== -1;\r\n        }\r\n\r\n        function toBlob(canvas) {\r\n            return new Promise(function (resolve) {\r\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\r\n                var length = binaryString.length;\r\n                var binaryArray = new Uint8Array(length);\r\n\r\n                for (var i = 0; i < length; i++)\r\n                    binaryArray[i] = binaryString.charCodeAt(i);\r\n\r\n                resolve(new Blob([binaryArray], {\r\n                    type: 'image/png'\r\n                }));\r\n            });\r\n        }\r\n\r\n        function canvasToBlob(canvas) {\r\n            if (canvas.toBlob)\r\n                return new Promise(function (resolve) {\r\n                    canvas.toBlob(resolve);\r\n                });\r\n\r\n            return toBlob(canvas);\r\n        }\r\n\r\n        function resolveUrl(url, baseUrl) {\r\n            var doc = document.implementation.createHTMLDocument();\r\n            var base = doc.createElement('base');\r\n            doc.head.appendChild(base);\r\n            var a = doc.createElement('a');\r\n            doc.body.appendChild(a);\r\n            base.href = baseUrl;\r\n            a.href = url;\r\n            return a.href;\r\n        }\r\n\r\n        function uid() {\r\n            var index = 0;\r\n\r\n            return function () {\r\n                return 'u' + fourRandomChars() + index++;\r\n\r\n                function fourRandomChars() {\r\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\r\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeImage(uri) {\r\n            return new Promise(function (resolve, reject) {\r\n                var image = new Image();\r\n                image.onload = function () {\r\n                    resolve(image);\r\n                };\r\n                image.onerror = reject;\r\n                image.src = uri;\r\n            });\r\n        }\r\n\r\n        function getAndEncode(url) {\r\n\r\n            function getRootUrl() {\r\n                return window.location.origin?window.location.origin+'/':window.location.protocol+'/'+window.location.host+'/';\r\n            }\r\n\r\n            var TIMEOUT = 30000;\r\n            if(domtoimage.impl.options.cacheBust) {\r\n                // Cache bypass so we dont have CORS issues with cached images\r\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\r\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\r\n            }\r\n\r\n            if(domtoimage.impl.options.proxy) {\r\n                url = domtoimage.impl.options.proxy + ((/^http[s]?\\:\\/\\//).test(url) ? url : (getRootUrl() + url));\r\n            }\r\n\r\n            return new Promise(function (resolve) {\r\n                var request = new XMLHttpRequest();\r\n\r\n                request.onreadystatechange = done;\r\n                request.ontimeout = timeout;\r\n                request.responseType = 'blob';\r\n                request.timeout = TIMEOUT;\r\n                request.open('GET', url, true);\r\n                request.send();\r\n\r\n                var placeholder;\r\n                if(domtoimage.impl.options.imagePlaceholder) {\r\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\r\n                    if(split && split[1]) {\r\n                        placeholder = split[1];\r\n                    }\r\n                }\r\n\r\n                function done() {\r\n                    if (request.readyState !== 4) return;\r\n\r\n                    if (request.status !== 200) {\r\n                        if(placeholder) {\r\n                            resolve(placeholder);\r\n                        } else {\r\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    var encoder = new FileReader();\r\n                    encoder.onloadend = function () {\r\n                        var content = encoder.result.split(/,/)[1];\r\n                        resolve(content);\r\n                    };\r\n                    encoder.readAsDataURL(request.response);\r\n                }\r\n\r\n                function timeout() {\r\n                    if(placeholder) {\r\n                        resolve(placeholder);\r\n                    } else {\r\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\r\n                    }\r\n                }\r\n\r\n                function fail(message) {\r\n                    console.error(message);\r\n                    resolve('');\r\n                }\r\n            });\r\n        }\r\n\r\n        function dataAsUrl(content, type) {\r\n            return 'data:' + type + ';base64,' + content;\r\n        }\r\n\r\n        function escape(string) {\r\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\r\n        }\r\n\r\n        function delay(ms) {\r\n            return function (arg) {\r\n                return new Promise(function (resolve) {\r\n                    setTimeout(function () {\r\n                        resolve(arg);\r\n                    }, ms);\r\n                });\r\n            };\r\n        }\r\n\r\n        function asArray(arrayLike) {\r\n            var array = [];\r\n            var length = arrayLike.length;\r\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\r\n            return array;\r\n        }\r\n\r\n        function escapeXhtml(string) {\r\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\r\n        }\r\n\r\n        function width(node) {\r\n            var leftBorder = px(node, 'border-left-width');\r\n            var rightBorder = px(node, 'border-right-width');\r\n            return node.scrollWidth + leftBorder + rightBorder;\r\n        }\r\n\r\n        function height(node) {\r\n            var topBorder = px(node, 'border-top-width');\r\n            var bottomBorder = px(node, 'border-bottom-width');\r\n            return node.scrollHeight + topBorder + bottomBorder;\r\n        }\r\n\r\n        function px(node, styleProperty) {\r\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\r\n            return parseFloat(value.replace('px', ''));\r\n        }\r\n    }\r\n\r\n    function newInliner() {\r\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\r\n\r\n        return {\r\n            inlineAll: inlineAll,\r\n            shouldProcess: shouldProcess,\r\n            impl: {\r\n                readUrls: readUrls,\r\n                inline: inline\r\n            }\r\n        };\r\n\r\n        function shouldProcess(string) {\r\n            return string.search(URL_REGEX) !== -1;\r\n        }\r\n\r\n        function readUrls(string) {\r\n            var result = [];\r\n            var match;\r\n            while ((match = URL_REGEX.exec(string)) !== null) {\r\n                result.push(match[1]);\r\n            }\r\n            return result.filter(function (url) {\r\n                return !util.isDataUrl(url);\r\n            });\r\n        }\r\n\r\n        function inline(string, url, baseUrl, get) {\r\n            return Promise.resolve(url)\r\n                .then(function (url) {\r\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\r\n                })\r\n                .then(get || util.getAndEncode)\r\n                .then(function (data) {\r\n                    return util.dataAsUrl(data, util.mimeType(url));\r\n                })\r\n                .then(function (dataUrl) {\r\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\r\n                });\r\n\r\n            function urlAsRegex(url) {\r\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\r\n            }\r\n        }\r\n\r\n        function inlineAll(string, baseUrl, get) {\r\n            if (nothingToInline()) return Promise.resolve(string);\r\n\r\n            return Promise.resolve(string)\r\n                .then(readUrls)\r\n                .then(function (urls) {\r\n                    var done = Promise.resolve(string);\r\n                    urls.forEach(function (url) {\r\n                        done = done.then(function (string) {\r\n                            return inline(string, url, baseUrl, get);\r\n                        });\r\n                    });\r\n                    return done;\r\n                });\r\n\r\n            function nothingToInline() {\r\n                return !shouldProcess(string);\r\n            }\r\n        }\r\n    }\r\n\r\n    function newFontFaces() {\r\n        return {\r\n            resolveAll: resolveAll,\r\n            impl: {\r\n                readAll: readAll\r\n            }\r\n        };\r\n\r\n        function resolveAll() {\r\n            return readAll(document)\r\n                .then(function (webFonts) {\r\n                    return Promise.all(\r\n                        webFonts.map(function (webFont) {\r\n                            return webFont.resolve();\r\n                        })\r\n                    );\r\n                })\r\n                .then(function (cssStrings) {\r\n                    return cssStrings.join('\\n');\r\n                });\r\n        }\r\n\r\n        function readAll() {\r\n            return Promise.resolve(util.asArray(document.styleSheets))\r\n                .then(getCssRules)\r\n                .then(selectWebFontRules)\r\n                .then(function (rules) {\r\n                    return rules.map(newWebFont);\r\n                });\r\n\r\n            function selectWebFontRules(cssRules) {\r\n                return cssRules\r\n                    .filter(function (rule) {\r\n                        return rule.type === CSSRule.FONT_FACE_RULE;\r\n                    })\r\n                    .filter(function (rule) {\r\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\r\n                    });\r\n            }\r\n\r\n            function getCssRules(styleSheets) {\r\n                var cssRules = [];\r\n                styleSheets.forEach(function (sheet) {\r\n                    try {\r\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\r\n                    } catch (e) {\r\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\r\n                    }\r\n                });\r\n                return cssRules;\r\n            }\r\n\r\n            function newWebFont(webFontRule) {\r\n                return {\r\n                    resolve: function resolve() {\r\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\r\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\r\n                    },\r\n                    src: function () {\r\n                        return webFontRule.style.getPropertyValue('src');\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    function newImages() {\r\n        return {\r\n            inlineAll: inlineAll,\r\n            impl: {\r\n                newImage: newImage\r\n            }\r\n        };\r\n\r\n        function newImage(element) {\r\n            return {\r\n                inline: inline\r\n            };\r\n\r\n            function inline(get) {\r\n                if (util.isDataUrl(element.src)) return Promise.resolve();\r\n\r\n                return Promise.resolve(element.src)\r\n                    .then(get || util.getAndEncode)\r\n                    .then(function (data) {\r\n                        return util.dataAsUrl(data, util.mimeType(element.src));\r\n                    })\r\n                    .then(function (dataUrl) {\r\n                        return new Promise(function (resolve, reject) {\r\n                            element.onload = resolve;\r\n                            element.onerror = reject;\r\n                            element.src = dataUrl;\r\n                        });\r\n                    });\r\n            }\r\n        }\r\n\r\n        function inlineAll(node) {\r\n            if (!(node instanceof Element)) return Promise.resolve(node);\r\n\r\n            return inlineBackground(node)\r\n                .then(function () {\r\n                    if (node instanceof HTMLImageElement)\r\n                        return newImage(node).inline();\r\n                    else\r\n                        return Promise.all(\r\n                            util.asArray(node.childNodes).map(function (child) {\r\n                                return inlineAll(child);\r\n                            })\r\n                        );\r\n                });\r\n\r\n            function inlineBackground(node) {\r\n                var background = node.style.getPropertyValue('background');\r\n\r\n                if (!background) return Promise.resolve(node);\r\n\r\n                return inliner.inlineAll(background)\r\n                    .then(function (inlined) {\r\n                        node.style.setProperty(\r\n                            'background',\r\n                            inlined,\r\n                            node.style.getPropertyPriority('background')\r\n                        );\r\n                    })\r\n                    .then(function () {\r\n                        return node;\r\n                    });\r\n            }\r\n        }\r\n    }\r\n})(this);\r\n"],"mappings":"AAAA,CAAC,UAAUA,MAAV,EAAkB;EACf;;EAEA,IAAIC,IAAI,GAAGC,OAAO,EAAlB;EACA,IAAIC,OAAO,GAAGC,UAAU,EAAxB;EACA,IAAIC,SAAS,GAAGC,YAAY,EAA5B;EACA,IAAIC,MAAM,GAAGC,SAAS,EAAtB,CANe,CAQf;;EACA,IAAIC,cAAc,GAAG;IACjB;IACAC,gBAAgB,EAAEC,SAFD;IAGjB;IACAC,SAAS,EAAE,KAJM;IAKjB;IACAC,KAAK,EAAE;EANU,CAArB;EASA,IAAIC,UAAU,GAAG;IACbC,QAAQ,EAAEA,QADG;IAEbC,KAAK,EAAEA,KAFM;IAGbC,KAAK,EAAEA,KAHM;IAIbC,MAAM,EAAEA,MAJK;IAKbC,MAAM,EAAEA,MALK;IAMbC,WAAW,EAAEA,WANA;IAObC,IAAI,EAAE;MACFhB,SAAS,EAAEA,SADT;MAEFE,MAAM,EAAEA,MAFN;MAGFN,IAAI,EAAEA,IAHJ;MAIFE,OAAO,EAAEA,OAJP;MAKFmB,OAAO,EAAE;IALP;EAPO,CAAjB;EAgBA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EACIA,MAAM,CAACC,OAAP,GAAiBV,UAAjB,CADJ,KAGId,MAAM,CAACc,UAAP,GAAoBA,UAApB;EAGJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACI,SAASE,KAAT,CAAeS,IAAf,EAAqBH,OAArB,EAA8B;IAC1BA,OAAO,GAAGA,OAAO,IAAI,EAArB;IACAI,WAAW,CAACJ,OAAD,CAAX;IACA,OAAOK,OAAO,CAACC,OAAR,CAAgBH,IAAhB,EACFI,IADE,CACG,UAAUJ,IAAV,EAAgB;MAClB,OAAOK,SAAS,CAACL,IAAD,EAAOH,OAAO,CAACS,MAAf,EAAuB,IAAvB,CAAhB;IACH,CAHE,EAIFF,IAJE,CAIGG,UAJH,EAKFH,IALE,CAKGI,YALH,EAMFJ,IANE,CAMGK,YANH,EAOFL,IAPE,CAOG,UAAUM,KAAV,EAAiB;MACnB,OAAOC,cAAc,CAACD,KAAD,EACjBb,OAAO,CAACe,KAAR,IAAiBpC,IAAI,CAACoC,KAAL,CAAWZ,IAAX,CADA,EAEjBH,OAAO,CAACgB,MAAR,IAAkBrC,IAAI,CAACqC,MAAL,CAAYb,IAAZ,CAFD,CAArB;IAIH,CAZE,CAAP;;IAcA,SAASS,YAAT,CAAsBC,KAAtB,EAA6B;MACzB,IAAIb,OAAO,CAACiB,OAAZ,EAAqBJ,KAAK,CAACK,KAAN,CAAYC,eAAZ,GAA8BnB,OAAO,CAACiB,OAAtC;MAErB,IAAIjB,OAAO,CAACe,KAAZ,EAAmBF,KAAK,CAACK,KAAN,CAAYH,KAAZ,GAAoBf,OAAO,CAACe,KAAR,GAAgB,IAApC;MACnB,IAAIf,OAAO,CAACgB,MAAZ,EAAoBH,KAAK,CAACK,KAAN,CAAYF,MAAZ,GAAqBhB,OAAO,CAACgB,MAAR,GAAiB,IAAtC;MAEpB,IAAIhB,OAAO,CAACkB,KAAZ,EACIE,MAAM,CAACC,IAAP,CAAYrB,OAAO,CAACkB,KAApB,EAA2BI,OAA3B,CAAmC,UAAUC,QAAV,EAAoB;QACnDV,KAAK,CAACK,KAAN,CAAYK,QAAZ,IAAwBvB,OAAO,CAACkB,KAAR,CAAcK,QAAd,CAAxB;MACH,CAFD;MAIJ,OAAOV,KAAP;IACH;EACJ;EAED;AACJ;AACA;AACA;AACA;;;EACI,SAASf,WAAT,CAAqBK,IAArB,EAA2BH,OAA3B,EAAoC;IAChC,OAAOP,QAAQ,CAACU,IAAD,EAAOH,OAAO,IAAI,EAAlB,CAAR,CACFO,IADE,CACG,UAAUiB,MAAV,EAAkB;MACpB,OAAOA,MAAM,CAACC,UAAP,CAAkB,IAAlB,EAAwBC,YAAxB,CACH,CADG,EAEH,CAFG,EAGH/C,IAAI,CAACoC,KAAL,CAAWZ,IAAX,CAHG,EAIHxB,IAAI,CAACqC,MAAL,CAAYb,IAAZ,CAJG,EAKLwB,IALF;IAMH,CARE,CAAP;EASH;EAED;AACJ;AACA;AACA;AACA;;;EACI,SAAShC,KAAT,CAAeQ,IAAf,EAAqBH,OAArB,EAA8B;IAC1B,OAAOP,QAAQ,CAACU,IAAD,EAAOH,OAAO,IAAI,EAAlB,CAAR,CACFO,IADE,CACG,UAAUiB,MAAV,EAAkB;MACpB,OAAOA,MAAM,CAACI,SAAP,EAAP;IACH,CAHE,CAAP;EAIH;EAED;AACJ;AACA;AACA;AACA;;;EACI,SAAShC,MAAT,CAAgBO,IAAhB,EAAsBH,OAAtB,EAA+B;IAC3BA,OAAO,GAAGA,OAAO,IAAI,EAArB;IACA,OAAOP,QAAQ,CAACU,IAAD,EAAOH,OAAP,CAAR,CACFO,IADE,CACG,UAAUiB,MAAV,EAAkB;MACpB,OAAOA,MAAM,CAACI,SAAP,CAAiB,YAAjB,EAA+B5B,OAAO,CAAC6B,OAAR,IAAmB,GAAlD,CAAP;IACH,CAHE,CAAP;EAIH;EAED;AACJ;AACA;AACA;AACA;;;EACI,SAAShC,MAAT,CAAgBM,IAAhB,EAAsBH,OAAtB,EAA+B;IAC3B,OAAOP,QAAQ,CAACU,IAAD,EAAOH,OAAO,IAAI,EAAlB,CAAR,CACFO,IADE,CACG5B,IAAI,CAACmD,YADR,CAAP;EAEH;;EAED,SAAS1B,WAAT,CAAqBJ,OAArB,EAA8B;IAC1B;IACA,IAAG,OAAOA,OAAO,CAACZ,gBAAf,KAAqC,WAAxC,EAAqD;MACjDI,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBZ,gBAAxB,GAA2CD,cAAc,CAACC,gBAA1D;IACH,CAFD,MAEO;MACHI,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBZ,gBAAxB,GAA2CY,OAAO,CAACZ,gBAAnD;IACH;;IAED,IAAG,OAAOY,OAAO,CAACV,SAAf,KAA8B,WAAjC,EAA8C;MAC1CE,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBV,SAAxB,GAAoCH,cAAc,CAACG,SAAnD;IACH,CAFD,MAEO;MACHE,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBV,SAAxB,GAAoCU,OAAO,CAACV,SAA5C;IACH;;IAED,IAAG,OAAOU,OAAO,CAACT,KAAf,KAA0B,WAA7B,EAA0C;MACxCC,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBT,KAAxB,GAAgCJ,cAAc,CAACI,KAA/C;IACD,CAFD,MAEO;MACLC,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBT,KAAxB,GAAgCS,OAAO,CAACT,KAAxC;IACD;EACJ;;EAED,SAASE,QAAT,CAAkBsC,OAAlB,EAA2B/B,OAA3B,EAAoC;IAChC,OAAON,KAAK,CAACqC,OAAD,EAAU/B,OAAV,CAAL,CACFO,IADE,CACG5B,IAAI,CAACqD,SADR,EAEFzB,IAFE,CAEG5B,IAAI,CAACsD,KAAL,CAAW,GAAX,CAFH,EAGF1B,IAHE,CAGG,UAAU2B,KAAV,EAAiB;MACnB,IAAIV,MAAM,GAAGW,SAAS,CAACJ,OAAD,CAAtB;MACAP,MAAM,CAACC,UAAP,CAAkB,IAAlB,EAAwBW,SAAxB,CAAkCF,KAAlC,EAAyC,CAAzC,EAA4C,CAA5C;MACA,OAAOV,MAAP;IACH,CAPE,CAAP;;IASA,SAASW,SAAT,CAAmBJ,OAAnB,EAA4B;MACxB,IAAIP,MAAM,GAAGa,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;MACAd,MAAM,CAACT,KAAP,GAAef,OAAO,CAACe,KAAR,IAAiBpC,IAAI,CAACoC,KAAL,CAAWgB,OAAX,CAAhC;MACAP,MAAM,CAACR,MAAP,GAAgBhB,OAAO,CAACgB,MAAR,IAAkBrC,IAAI,CAACqC,MAAL,CAAYe,OAAZ,CAAlC;;MAEA,IAAI/B,OAAO,CAACiB,OAAZ,EAAqB;QACjB,IAAIsB,GAAG,GAAGf,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAAV;QACAc,GAAG,CAACC,SAAJ,GAAgBxC,OAAO,CAACiB,OAAxB;QACAsB,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBjB,MAAM,CAACT,KAA1B,EAAiCS,MAAM,CAACR,MAAxC;MACH;;MAED,OAAOQ,MAAP;IACH;EACJ;;EAED,SAAShB,SAAT,CAAmBL,IAAnB,EAAyBM,MAAzB,EAAiCiC,IAAjC,EAAuC;IACnC,IAAI,CAACA,IAAD,IAASjC,MAAT,IAAmB,CAACA,MAAM,CAACN,IAAD,CAA9B,EAAsC,OAAOE,OAAO,CAACC,OAAR,EAAP;IAEtC,OAAOD,OAAO,CAACC,OAAR,CAAgBH,IAAhB,EACFI,IADE,CACGoC,YADH,EAEFpC,IAFE,CAEG,UAAUM,KAAV,EAAiB;MACnB,OAAO+B,aAAa,CAACzC,IAAD,EAAOU,KAAP,EAAcJ,MAAd,CAApB;IACH,CAJE,EAKFF,IALE,CAKG,UAAUM,KAAV,EAAiB;MACnB,OAAOgC,YAAY,CAAC1C,IAAD,EAAOU,KAAP,CAAnB;IACH,CAPE,CAAP;;IASA,SAAS8B,YAAT,CAAsBxC,IAAtB,EAA4B;MACxB,IAAIA,IAAI,YAAY2C,iBAApB,EAAuC,OAAOnE,IAAI,CAACqD,SAAL,CAAe7B,IAAI,CAACyB,SAAL,EAAf,CAAP;MACvC,OAAOzB,IAAI,CAACK,SAAL,CAAe,KAAf,CAAP;IACH;;IAED,SAASoC,aAAT,CAAuBG,QAAvB,EAAiClC,KAAjC,EAAwCJ,MAAxC,EAAgD;MAC5C,IAAIuC,QAAQ,GAAGD,QAAQ,CAACE,UAAxB;MACA,IAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B,OAAO7C,OAAO,CAACC,OAAR,CAAgBO,KAAhB,CAAP;MAE3B,OAAOsC,oBAAoB,CAACtC,KAAD,EAAQlC,IAAI,CAACyE,OAAL,CAAaJ,QAAb,CAAR,EAAgCvC,MAAhC,CAApB,CACFF,IADE,CACG,YAAY;QACd,OAAOM,KAAP;MACH,CAHE,CAAP;;MAKA,SAASsC,oBAAT,CAA8BE,MAA9B,EAAsCL,QAAtC,EAAgDvC,MAAhD,EAAwD;QACpD,IAAI6C,IAAI,GAAGjD,OAAO,CAACC,OAAR,EAAX;QACA0C,QAAQ,CAAC1B,OAAT,CAAiB,UAAUiC,KAAV,EAAiB;UAC9BD,IAAI,GAAGA,IAAI,CACN/C,IADE,CACG,YAAY;YACd,OAAOC,SAAS,CAAC+C,KAAD,EAAQ9C,MAAR,CAAhB;UACH,CAHE,EAIFF,IAJE,CAIG,UAAUiD,UAAV,EAAsB;YACxB,IAAIA,UAAJ,EAAgBH,MAAM,CAACI,WAAP,CAAmBD,UAAnB;UACnB,CANE,CAAP;QAOH,CARD;QASA,OAAOF,IAAP;MACH;IACJ;;IAED,SAAST,YAAT,CAAsBE,QAAtB,EAAgClC,KAAhC,EAAuC;MACnC,IAAI,EAAEA,KAAK,YAAY6C,OAAnB,CAAJ,EAAiC,OAAO7C,KAAP;MAEjC,OAAOR,OAAO,CAACC,OAAR,GACFC,IADE,CACGoD,UADH,EAEFpD,IAFE,CAEGqD,mBAFH,EAGFrD,IAHE,CAGGsD,aAHH,EAIFtD,IAJE,CAIGuD,MAJH,EAKFvD,IALE,CAKG,YAAY;QACd,OAAOM,KAAP;MACH,CAPE,CAAP;;MASA,SAAS8C,UAAT,GAAsB;QAClBI,SAAS,CAACC,MAAM,CAACC,gBAAP,CAAwBlB,QAAxB,CAAD,EAAoClC,KAAK,CAACK,KAA1C,CAAT;;QAEA,SAAS6C,SAAT,CAAmBG,MAAnB,EAA2BC,MAA3B,EAAmC;UAC/B,IAAID,MAAM,CAACE,OAAX,EAAoBD,MAAM,CAACC,OAAP,GAAiBF,MAAM,CAACE,OAAxB,CAApB,KACKC,cAAc,CAACH,MAAD,EAASC,MAAT,CAAd;;UAEL,SAASE,cAAT,CAAwBH,MAAxB,EAAgCC,MAAhC,EAAwC;YACpCxF,IAAI,CAACyE,OAAL,CAAac,MAAb,EAAqB5C,OAArB,CAA6B,UAAUgD,IAAV,EAAgB;cACzCH,MAAM,CAACI,WAAP,CACID,IADJ,EAEIJ,MAAM,CAACM,gBAAP,CAAwBF,IAAxB,CAFJ,EAGIJ,MAAM,CAACO,mBAAP,CAA2BH,IAA3B,CAHJ;YAKH,CAND;UAOH;QACJ;MACJ;;MAED,SAASV,mBAAT,GAA+B;QAC3B,CAAC,SAAD,EAAY,QAAZ,EAAsBtC,OAAtB,CAA8B,UAAUoD,OAAV,EAAmB;UAC7CC,kBAAkB,CAACD,OAAD,CAAlB;QACH,CAFD;;QAIA,SAASC,kBAAT,CAA4BD,OAA5B,EAAqC;UACjC,IAAIxD,KAAK,GAAG8C,MAAM,CAACC,gBAAP,CAAwBlB,QAAxB,EAAkC2B,OAAlC,CAAZ;UACA,IAAIE,OAAO,GAAG1D,KAAK,CAACsD,gBAAN,CAAuB,SAAvB,CAAd;UAEA,IAAII,OAAO,KAAK,EAAZ,IAAkBA,OAAO,KAAK,MAAlC,EAA0C;UAE1C,IAAIC,SAAS,GAAGlG,IAAI,CAACmG,GAAL,EAAhB;UACAjE,KAAK,CAACgE,SAAN,GAAkBhE,KAAK,CAACgE,SAAN,GAAkB,GAAlB,GAAwBA,SAA1C;UACA,IAAIE,YAAY,GAAG1C,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAnB;UACAyC,YAAY,CAACtB,WAAb,CAAyBuB,wBAAwB,CAACH,SAAD,EAAYH,OAAZ,EAAqBxD,KAArB,CAAjD;UACAL,KAAK,CAAC4C,WAAN,CAAkBsB,YAAlB;;UAEA,SAASC,wBAAT,CAAkCH,SAAlC,EAA6CH,OAA7C,EAAsDxD,KAAtD,EAA6D;YACzD,IAAI+D,QAAQ,GAAG,MAAMJ,SAAN,GAAkB,GAAlB,GAAwBH,OAAvC;YACA,IAAIN,OAAO,GAAGlD,KAAK,CAACkD,OAAN,GAAgBc,aAAa,CAAChE,KAAD,CAA7B,GAAuCiE,mBAAmB,CAACjE,KAAD,CAAxE;YACA,OAAOmB,QAAQ,CAAC+C,cAAT,CAAwBH,QAAQ,GAAG,GAAX,GAAiBb,OAAjB,GAA2B,GAAnD,CAAP;;YAEA,SAASc,aAAT,CAAuBhE,KAAvB,EAA8B;cAC1B,IAAI0D,OAAO,GAAG1D,KAAK,CAACsD,gBAAN,CAAuB,SAAvB,CAAd;cACA,OAAOtD,KAAK,CAACkD,OAAN,GAAgB,YAAhB,GAA+BQ,OAA/B,GAAyC,GAAhD;YACH;;YAED,SAASO,mBAAT,CAA6BjE,KAA7B,EAAoC;cAEhC,OAAOvC,IAAI,CAACyE,OAAL,CAAalC,KAAb,EACFmE,GADE,CACEC,cADF,EAEFC,IAFE,CAEG,IAFH,IAEW,GAFlB;;cAIA,SAASD,cAAT,CAAwBhB,IAAxB,EAA8B;gBAC1B,OAAOA,IAAI,GAAG,IAAP,GACHpD,KAAK,CAACsD,gBAAN,CAAuBF,IAAvB,CADG,IAEFpD,KAAK,CAACuD,mBAAN,CAA0BH,IAA1B,IAAkC,aAAlC,GAAkD,EAFhD,CAAP;cAGH;YACJ;UACJ;QACJ;MACJ;;MAED,SAAST,aAAT,GAAyB;QACrB,IAAId,QAAQ,YAAYyC,mBAAxB,EAA6C3E,KAAK,CAAC4E,SAAN,GAAkB1C,QAAQ,CAAC2C,KAA3B;QAC7C,IAAI3C,QAAQ,YAAY4C,gBAAxB,EAA0C9E,KAAK,CAAC+E,YAAN,CAAmB,OAAnB,EAA4B7C,QAAQ,CAAC2C,KAArC;MAC7C;;MAED,SAAS5B,MAAT,GAAkB;QACd,IAAI,EAAEjD,KAAK,YAAYgF,UAAnB,CAAJ,EAAoC;QACpChF,KAAK,CAAC+E,YAAN,CAAmB,OAAnB,EAA4B,4BAA5B;QAEA,IAAI,EAAE/E,KAAK,YAAYiF,cAAnB,CAAJ,EAAwC;QACxC,CAAC,OAAD,EAAU,QAAV,EAAoBxE,OAApB,CAA4B,UAAUyE,SAAV,EAAqB;UAC7C,IAAIL,KAAK,GAAG7E,KAAK,CAACmF,YAAN,CAAmBD,SAAnB,CAAZ;UACA,IAAI,CAACL,KAAL,EAAY;UAEZ7E,KAAK,CAACK,KAAN,CAAYqD,WAAZ,CAAwBwB,SAAxB,EAAmCL,KAAnC;QACH,CALD;MAMH;IACJ;EACJ;;EAED,SAAShF,UAAT,CAAoBP,IAApB,EAA0B;IACtB,OAAOpB,SAAS,CAACkH,UAAV,GACF1F,IADE,CACG,UAAU6D,OAAV,EAAmB;MACrB,IAAI8B,SAAS,GAAG7D,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;MACAnC,IAAI,CAACsD,WAAL,CAAiByC,SAAjB;MACAA,SAAS,CAACzC,WAAV,CAAsBpB,QAAQ,CAAC+C,cAAT,CAAwBhB,OAAxB,CAAtB;MACA,OAAOjE,IAAP;IACH,CANE,CAAP;EAOH;;EAED,SAASQ,YAAT,CAAsBR,IAAtB,EAA4B;IACxB,OAAOlB,MAAM,CAACkH,SAAP,CAAiBhG,IAAjB,EACFI,IADE,CACG,YAAY;MACd,OAAOJ,IAAP;IACH,CAHE,CAAP;EAIH;;EAED,SAASW,cAAT,CAAwBX,IAAxB,EAA8BY,KAA9B,EAAqCC,MAArC,EAA6C;IACzC,OAAOX,OAAO,CAACC,OAAR,CAAgBH,IAAhB,EACFI,IADE,CACG,UAAUJ,IAAV,EAAgB;MAClBA,IAAI,CAACyF,YAAL,CAAkB,OAAlB,EAA2B,8BAA3B;MACA,OAAO,IAAIQ,aAAJ,GAAoBC,iBAApB,CAAsClG,IAAtC,CAAP;IACH,CAJE,EAKFI,IALE,CAKG5B,IAAI,CAAC2H,WALR,EAMF/F,IANE,CAMG,UAAUgG,KAAV,EAAiB;MACnB,OAAO,2DAA2DA,KAA3D,GAAmE,kBAA1E;IACH,CARE,EASFhG,IATE,CASG,UAAUiG,aAAV,EAAyB;MAC3B,OAAO,oDAAoDzF,KAApD,GAA4D,YAA5D,GAA2EC,MAA3E,GAAoF,IAApF,GACHwF,aADG,GACa,QADpB;IAEH,CAZE,EAaFjG,IAbE,CAaG,UAAUkG,GAAV,EAAe;MACjB,OAAO,sCAAsCA,GAA7C;IACH,CAfE,CAAP;EAgBH;;EAED,SAAS7H,OAAT,GAAmB;IACf,OAAO;MACH8H,MAAM,EAAEA,MADL;MAEHC,cAAc,EAAEA,cAFb;MAGHC,QAAQ,EAAEA,QAHP;MAIHC,SAAS,EAAEA,SAJR;MAKHC,SAAS,EAAEA,SALR;MAMHhF,YAAY,EAAEA,YANX;MAOHiF,UAAU,EAAEA,UAPT;MAQHC,YAAY,EAAEA,YARX;MASHlC,GAAG,EAAEA,GAAG,EATL;MAUH7C,KAAK,EAAEA,KAVJ;MAWHmB,OAAO,EAAEA,OAXN;MAYHkD,WAAW,EAAEA,WAZV;MAaHtE,SAAS,EAAEA,SAbR;MAcHjB,KAAK,EAAEA,KAdJ;MAeHC,MAAM,EAAEA;IAfL,CAAP;;IAkBA,SAASiG,KAAT,GAAiB;MACb;AACZ;AACA;AACA;MACY,IAAIC,IAAI,GAAG,uBAAX;MACA,IAAIC,IAAI,GAAG,YAAX;MAEA,OAAO;QACH,QAAQD,IADL;QAEH,SAASA,IAFN;QAGH,OAAO,2BAHJ;QAIH,OAAO,+BAJJ;QAKH,OAAO,WALJ;QAMH,OAAOC,IANJ;QAOH,QAAQA,IAPL;QAQH,OAAO,WARJ;QASH,QAAQ,YATL;QAUH,OAAO;MAVJ,CAAP;IAYH;;IAED,SAASR,cAAT,CAAwBS,GAAxB,EAA6B;MACzB,IAAIC,KAAK,GAAG,kBAAkBC,IAAlB,CAAuBF,GAAvB,CAAZ;MACA,IAAIC,KAAJ,EAAW,OAAOA,KAAK,CAAC,CAAD,CAAZ,CAAX,KACK,OAAO,EAAP;IACR;;IAED,SAAST,QAAT,CAAkBQ,GAAlB,EAAuB;MACnB,IAAIG,SAAS,GAAGZ,cAAc,CAACS,GAAD,CAAd,CAAoBI,WAApB,EAAhB;MACA,OAAOP,KAAK,GAAGM,SAAH,CAAL,IAAsB,EAA7B;IACH;;IAED,SAAST,SAAT,CAAmBM,GAAnB,EAAwB;MACpB,OAAOA,GAAG,CAACK,MAAJ,CAAW,UAAX,MAA2B,CAAC,CAAnC;IACH;;IAED,SAAS5H,MAAT,CAAgB2B,MAAhB,EAAwB;MACpB,OAAO,IAAInB,OAAJ,CAAY,UAAUC,OAAV,EAAmB;QAClC,IAAIoH,YAAY,GAAG1D,MAAM,CAAC2D,IAAP,CAAYnG,MAAM,CAACI,SAAP,GAAmBgG,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAZ,CAAnB;QACA,IAAI1E,MAAM,GAAGwE,YAAY,CAACxE,MAA1B;QACA,IAAI2E,WAAW,GAAG,IAAIC,UAAJ,CAAe5E,MAAf,CAAlB;;QAEA,KAAK,IAAI6E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7E,MAApB,EAA4B6E,CAAC,EAA7B,EACIF,WAAW,CAACE,CAAD,CAAX,GAAiBL,YAAY,CAACM,UAAb,CAAwBD,CAAxB,CAAjB;;QAEJzH,OAAO,CAAC,IAAI2H,IAAJ,CAAS,CAACJ,WAAD,CAAT,EAAwB;UAC5BK,IAAI,EAAE;QADsB,CAAxB,CAAD,CAAP;MAGH,CAXM,CAAP;IAYH;;IAED,SAASpG,YAAT,CAAsBN,MAAtB,EAA8B;MAC1B,IAAIA,MAAM,CAAC3B,MAAX,EACI,OAAO,IAAIQ,OAAJ,CAAY,UAAUC,OAAV,EAAmB;QAClCkB,MAAM,CAAC3B,MAAP,CAAcS,OAAd;MACH,CAFM,CAAP;MAIJ,OAAOT,MAAM,CAAC2B,MAAD,CAAb;IACH;;IAED,SAASuF,UAAT,CAAoBK,GAApB,EAAyBe,OAAzB,EAAkC;MAC9B,IAAIC,GAAG,GAAG/F,QAAQ,CAACgG,cAAT,CAAwBC,kBAAxB,EAAV;MACA,IAAIC,IAAI,GAAGH,GAAG,CAAC9F,aAAJ,CAAkB,MAAlB,CAAX;MACA8F,GAAG,CAACI,IAAJ,CAAS/E,WAAT,CAAqB8E,IAArB;MACA,IAAIE,CAAC,GAAGL,GAAG,CAAC9F,aAAJ,CAAkB,GAAlB,CAAR;MACA8F,GAAG,CAACM,IAAJ,CAASjF,WAAT,CAAqBgF,CAArB;MACAF,IAAI,CAACI,IAAL,GAAYR,OAAZ;MACAM,CAAC,CAACE,IAAF,GAASvB,GAAT;MACA,OAAOqB,CAAC,CAACE,IAAT;IACH;;IAED,SAAS7D,GAAT,GAAe;MACX,IAAI8D,KAAK,GAAG,CAAZ;MAEA,OAAO,YAAY;QACf,OAAO,MAAMC,eAAe,EAArB,GAA0BD,KAAK,EAAtC;;QAEA,SAASC,eAAT,GAA2B;UACvB;UACA,OAAO,CAAC,SAAS,CAACC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAhB,IAAmC,CAApC,EAAuCC,QAAvC,CAAgD,EAAhD,CAAV,EAA+DC,KAA/D,CAAqE,CAAC,CAAtE,CAAP;QACH;MACJ,CAPD;IAQH;;IAED,SAASlH,SAAT,CAAmBmH,GAAnB,EAAwB;MACpB,OAAO,IAAI9I,OAAJ,CAAY,UAAUC,OAAV,EAAmB8I,MAAnB,EAA2B;QAC1C,IAAIlH,KAAK,GAAG,IAAImH,KAAJ,EAAZ;;QACAnH,KAAK,CAACoH,MAAN,GAAe,YAAY;UACvBhJ,OAAO,CAAC4B,KAAD,CAAP;QACH,CAFD;;QAGAA,KAAK,CAACqH,OAAN,GAAgBH,MAAhB;QACAlH,KAAK,CAACsH,GAAN,GAAYL,GAAZ;MACH,CAPM,CAAP;IAQH;;IAED,SAASnC,YAAT,CAAsBI,GAAtB,EAA2B;MAEvB,SAASqC,UAAT,GAAsB;QAClB,OAAOzF,MAAM,CAAC0F,QAAP,CAAgBC,MAAhB,GAAuB3F,MAAM,CAAC0F,QAAP,CAAgBC,MAAhB,GAAuB,GAA9C,GAAkD3F,MAAM,CAAC0F,QAAP,CAAgBE,QAAhB,GAAyB,GAAzB,GAA6B5F,MAAM,CAAC0F,QAAP,CAAgBG,IAA7C,GAAkD,GAA3G;MACH;;MAED,IAAIC,OAAO,GAAG,KAAd;;MACA,IAAGtK,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBV,SAA3B,EAAsC;QAClC;QACA;QACA8H,GAAG,IAAI,CAAE,IAAD,CAAO2C,IAAP,CAAY3C,GAAZ,IAAmB,GAAnB,GAAyB,GAA1B,IAAkC,IAAI4C,IAAJ,EAAD,CAAaC,OAAb,EAAxC;MACH;;MAED,IAAGzK,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBT,KAA3B,EAAkC;QAC9B6H,GAAG,GAAG5H,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBT,KAAxB,IAAkC,iBAAD,CAAoBwK,IAApB,CAAyB3C,GAAzB,IAAgCA,GAAhC,GAAuCqC,UAAU,KAAKrC,GAAvF,CAAN;MACH;;MAED,OAAO,IAAI/G,OAAJ,CAAY,UAAUC,OAAV,EAAmB;QAClC,IAAI4J,OAAO,GAAG,IAAIC,cAAJ,EAAd;QAEAD,OAAO,CAACE,kBAAR,GAA6B9G,IAA7B;QACA4G,OAAO,CAACG,SAAR,GAAoBC,OAApB;QACAJ,OAAO,CAACK,YAAR,GAAuB,MAAvB;QACAL,OAAO,CAACI,OAAR,GAAkBR,OAAlB;QACAI,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoBpD,GAApB,EAAyB,IAAzB;QACA8C,OAAO,CAACO,IAAR;QAEA,IAAIC,WAAJ;;QACA,IAAGlL,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBZ,gBAA3B,EAA6C;UACzC,IAAIwI,KAAK,GAAGpI,UAAU,CAACO,IAAX,CAAgBC,OAAhB,CAAwBZ,gBAAxB,CAAyCwI,KAAzC,CAA+C,GAA/C,CAAZ;;UACA,IAAGA,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAjB,EAAsB;YAClB8C,WAAW,GAAG9C,KAAK,CAAC,CAAD,CAAnB;UACH;QACJ;;QAED,SAAStE,IAAT,GAAgB;UACZ,IAAI4G,OAAO,CAACS,UAAR,KAAuB,CAA3B,EAA8B;;UAE9B,IAAIT,OAAO,CAACU,MAAR,KAAmB,GAAvB,EAA4B;YACxB,IAAGF,WAAH,EAAgB;cACZpK,OAAO,CAACoK,WAAD,CAAP;YACH,CAFD,MAEO;cACHG,IAAI,CAAC,4BAA4BzD,GAA5B,GAAkC,YAAlC,GAAiD8C,OAAO,CAACU,MAA1D,CAAJ;YACH;;YAED;UACH;;UAED,IAAIE,OAAO,GAAG,IAAIC,UAAJ,EAAd;;UACAD,OAAO,CAACE,SAAR,GAAoB,YAAY;YAC5B,IAAIpG,OAAO,GAAGkG,OAAO,CAACG,MAAR,CAAerD,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAd;YACAtH,OAAO,CAACsE,OAAD,CAAP;UACH,CAHD;;UAIAkG,OAAO,CAACI,aAAR,CAAsBhB,OAAO,CAACiB,QAA9B;QACH;;QAED,SAASb,OAAT,GAAmB;UACf,IAAGI,WAAH,EAAgB;YACZpK,OAAO,CAACoK,WAAD,CAAP;UACH,CAFD,MAEO;YACHG,IAAI,CAAC,gBAAgBf,OAAhB,GAA0B,sCAA1B,GAAmE1C,GAApE,CAAJ;UACH;QACJ;;QAED,SAASyD,IAAT,CAAcO,OAAd,EAAuB;UACnBC,OAAO,CAACC,KAAR,CAAcF,OAAd;UACA9K,OAAO,CAAC,EAAD,CAAP;QACH;MACJ,CAnDM,CAAP;IAoDH;;IAED,SAASuG,SAAT,CAAmBjC,OAAnB,EAA4BsD,IAA5B,EAAkC;MAC9B,OAAO,UAAUA,IAAV,GAAiB,UAAjB,GAA8BtD,OAArC;IACH;;IAED,SAAS8B,MAAT,CAAgB6E,MAAhB,EAAwB;MACpB,OAAOA,MAAM,CAACC,OAAP,CAAe,0BAAf,EAA2C,MAA3C,CAAP;IACH;;IAED,SAASvJ,KAAT,CAAewJ,EAAf,EAAmB;MACf,OAAO,UAAUC,GAAV,EAAe;QAClB,OAAO,IAAIrL,OAAJ,CAAY,UAAUC,OAAV,EAAmB;UAClCqL,UAAU,CAAC,YAAY;YACnBrL,OAAO,CAACoL,GAAD,CAAP;UACH,CAFS,EAEPD,EAFO,CAAV;QAGH,CAJM,CAAP;MAKH,CAND;IAOH;;IAED,SAASrI,OAAT,CAAiBwI,SAAjB,EAA4B;MACxB,IAAIC,KAAK,GAAG,EAAZ;MACA,IAAI3I,MAAM,GAAG0I,SAAS,CAAC1I,MAAvB;;MACA,KAAK,IAAI6E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7E,MAApB,EAA4B6E,CAAC,EAA7B,EAAiC8D,KAAK,CAACC,IAAN,CAAWF,SAAS,CAAC7D,CAAD,CAApB;;MACjC,OAAO8D,KAAP;IACH;;IAED,SAASvF,WAAT,CAAqBiF,MAArB,EAA6B;MACzB,OAAOA,MAAM,CAACC,OAAP,CAAe,IAAf,EAAqB,KAArB,EAA4BA,OAA5B,CAAoC,KAApC,EAA2C,KAA3C,CAAP;IACH;;IAED,SAASzK,KAAT,CAAeZ,IAAf,EAAqB;MACjB,IAAI4L,UAAU,GAAGC,EAAE,CAAC7L,IAAD,EAAO,mBAAP,CAAnB;MACA,IAAI8L,WAAW,GAAGD,EAAE,CAAC7L,IAAD,EAAO,oBAAP,CAApB;MACA,OAAOA,IAAI,CAAC+L,WAAL,GAAmBH,UAAnB,GAAgCE,WAAvC;IACH;;IAED,SAASjL,MAAT,CAAgBb,IAAhB,EAAsB;MAClB,IAAIgM,SAAS,GAAGH,EAAE,CAAC7L,IAAD,EAAO,kBAAP,CAAlB;MACA,IAAIiM,YAAY,GAAGJ,EAAE,CAAC7L,IAAD,EAAO,qBAAP,CAArB;MACA,OAAOA,IAAI,CAACkM,YAAL,GAAoBF,SAApB,GAAgCC,YAAvC;IACH;;IAED,SAASJ,EAAT,CAAY7L,IAAZ,EAAkBmM,aAAlB,EAAiC;MAC7B,IAAI5G,KAAK,GAAG1B,MAAM,CAACC,gBAAP,CAAwB9D,IAAxB,EAA8BqE,gBAA9B,CAA+C8H,aAA/C,CAAZ;MACA,OAAOC,UAAU,CAAC7G,KAAK,CAAC8F,OAAN,CAAc,IAAd,EAAoB,EAApB,CAAD,CAAjB;IACH;EACJ;;EAED,SAAS1M,UAAT,GAAsB;IAClB,IAAI0N,SAAS,GAAG,6BAAhB;IAEA,OAAO;MACHrG,SAAS,EAAEA,SADR;MAEHsG,aAAa,EAAEA,aAFZ;MAGH1M,IAAI,EAAE;QACF2M,QAAQ,EAAEA,QADR;QAEFC,MAAM,EAAEA;MAFN;IAHH,CAAP;;IASA,SAASF,aAAT,CAAuBlB,MAAvB,EAA+B;MAC3B,OAAOA,MAAM,CAAC9D,MAAP,CAAc+E,SAAd,MAA6B,CAAC,CAArC;IACH;;IAED,SAASE,QAAT,CAAkBnB,MAAlB,EAA0B;MACtB,IAAIN,MAAM,GAAG,EAAb;MACA,IAAI5D,KAAJ;;MACA,OAAO,CAACA,KAAK,GAAGmF,SAAS,CAAClF,IAAV,CAAeiE,MAAf,CAAT,MAAqC,IAA5C,EAAkD;QAC9CN,MAAM,CAACa,IAAP,CAAYzE,KAAK,CAAC,CAAD,CAAjB;MACH;;MACD,OAAO4D,MAAM,CAACxK,MAAP,CAAc,UAAU2G,GAAV,EAAe;QAChC,OAAO,CAACzI,IAAI,CAACmI,SAAL,CAAeM,GAAf,CAAR;MACH,CAFM,CAAP;IAGH;;IAED,SAASuF,MAAT,CAAgBpB,MAAhB,EAAwBnE,GAAxB,EAA6Be,OAA7B,EAAsCyE,GAAtC,EAA2C;MACvC,OAAOvM,OAAO,CAACC,OAAR,CAAgB8G,GAAhB,EACF7G,IADE,CACG,UAAU6G,GAAV,EAAe;QACjB,OAAOe,OAAO,GAAGxJ,IAAI,CAACoI,UAAL,CAAgBK,GAAhB,EAAqBe,OAArB,CAAH,GAAmCf,GAAjD;MACH,CAHE,EAIF7G,IAJE,CAIGqM,GAAG,IAAIjO,IAAI,CAACqI,YAJf,EAKFzG,IALE,CAKG,UAAUoB,IAAV,EAAgB;QAClB,OAAOhD,IAAI,CAACkI,SAAL,CAAelF,IAAf,EAAqBhD,IAAI,CAACiI,QAAL,CAAcQ,GAAd,CAArB,CAAP;MACH,CAPE,EAQF7G,IARE,CAQG,UAAUsM,OAAV,EAAmB;QACrB,OAAOtB,MAAM,CAACC,OAAP,CAAesB,UAAU,CAAC1F,GAAD,CAAzB,EAAgC,OAAOyF,OAAP,GAAiB,IAAjD,CAAP;MACH,CAVE,CAAP;;MAYA,SAASC,UAAT,CAAoB1F,GAApB,EAAyB;QACrB,OAAO,IAAI2F,MAAJ,CAAW,oBAAoBpO,IAAI,CAAC+H,MAAL,CAAYU,GAAZ,CAApB,GAAuC,cAAlD,EAAkE,GAAlE,CAAP;MACH;IACJ;;IAED,SAASjB,SAAT,CAAmBoF,MAAnB,EAA2BpD,OAA3B,EAAoCyE,GAApC,EAAyC;MACrC,IAAII,eAAe,EAAnB,EAAuB,OAAO3M,OAAO,CAACC,OAAR,CAAgBiL,MAAhB,CAAP;MAEvB,OAAOlL,OAAO,CAACC,OAAR,CAAgBiL,MAAhB,EACFhL,IADE,CACGmM,QADH,EAEFnM,IAFE,CAEG,UAAU0M,IAAV,EAAgB;QAClB,IAAI3J,IAAI,GAAGjD,OAAO,CAACC,OAAR,CAAgBiL,MAAhB,CAAX;QACA0B,IAAI,CAAC3L,OAAL,CAAa,UAAU8F,GAAV,EAAe;UACxB9D,IAAI,GAAGA,IAAI,CAAC/C,IAAL,CAAU,UAAUgL,MAAV,EAAkB;YAC/B,OAAOoB,MAAM,CAACpB,MAAD,EAASnE,GAAT,EAAce,OAAd,EAAuByE,GAAvB,CAAb;UACH,CAFM,CAAP;QAGH,CAJD;QAKA,OAAOtJ,IAAP;MACH,CAVE,CAAP;;MAYA,SAAS0J,eAAT,GAA2B;QACvB,OAAO,CAACP,aAAa,CAAClB,MAAD,CAArB;MACH;IACJ;EACJ;;EAED,SAASvM,YAAT,GAAwB;IACpB,OAAO;MACHiH,UAAU,EAAEA,UADT;MAEHlG,IAAI,EAAE;QACFmN,OAAO,EAAEA;MADP;IAFH,CAAP;;IAOA,SAASjH,UAAT,GAAsB;MAClB,OAAOiH,OAAO,CAAC7K,QAAD,CAAP,CACF9B,IADE,CACG,UAAU4M,QAAV,EAAoB;QACtB,OAAO9M,OAAO,CAAC+M,GAAR,CACHD,QAAQ,CAAC9H,GAAT,CAAa,UAAUgI,OAAV,EAAmB;UAC5B,OAAOA,OAAO,CAAC/M,OAAR,EAAP;QACH,CAFD,CADG,CAAP;MAKH,CAPE,EAQFC,IARE,CAQG,UAAU+M,UAAV,EAAsB;QACxB,OAAOA,UAAU,CAAC/H,IAAX,CAAgB,IAAhB,CAAP;MACH,CAVE,CAAP;IAWH;;IAED,SAAS2H,OAAT,GAAmB;MACf,OAAO7M,OAAO,CAACC,OAAR,CAAgB3B,IAAI,CAACyE,OAAL,CAAaf,QAAQ,CAACkL,WAAtB,CAAhB,EACFhN,IADE,CACGiN,WADH,EAEFjN,IAFE,CAEGkN,kBAFH,EAGFlN,IAHE,CAGG,UAAUmN,KAAV,EAAiB;QACnB,OAAOA,KAAK,CAACrI,GAAN,CAAUsI,UAAV,CAAP;MACH,CALE,CAAP;;MAOA,SAASF,kBAAT,CAA4BG,QAA5B,EAAsC;QAClC,OAAOA,QAAQ,CACVnN,MADE,CACK,UAAUoN,IAAV,EAAgB;UACpB,OAAOA,IAAI,CAAC3F,IAAL,KAAc4F,OAAO,CAACC,cAA7B;QACH,CAHE,EAIFtN,MAJE,CAIK,UAAUoN,IAAV,EAAgB;UACpB,OAAOhP,OAAO,CAAC4N,aAAR,CAAsBoB,IAAI,CAAC3M,KAAL,CAAWsD,gBAAX,CAA4B,KAA5B,CAAtB,CAAP;QACH,CANE,CAAP;MAOH;;MAED,SAASgJ,WAAT,CAAqBD,WAArB,EAAkC;QAC9B,IAAIK,QAAQ,GAAG,EAAf;QACAL,WAAW,CAACjM,OAAZ,CAAoB,UAAU0M,KAAV,EAAiB;UACjC,IAAI;YACArP,IAAI,CAACyE,OAAL,CAAa4K,KAAK,CAACJ,QAAN,IAAkB,EAA/B,EAAmCtM,OAAnC,CAA2CsM,QAAQ,CAAC9B,IAAT,CAAcmC,IAAd,CAAmBL,QAAnB,CAA3C;UACH,CAFD,CAEE,OAAOM,CAAP,EAAU;YACR7C,OAAO,CAAC8C,GAAR,CAAY,wCAAwCH,KAAK,CAACrF,IAA1D,EAAgEuF,CAAC,CAACjF,QAAF,EAAhE;UACH;QACJ,CAND;QAOA,OAAO2E,QAAP;MACH;;MAED,SAASD,UAAT,CAAoBS,WAApB,EAAiC;QAC7B,OAAO;UACH9N,OAAO,EAAE,SAASA,OAAT,GAAmB;YACxB,IAAI6H,OAAO,GAAG,CAACiG,WAAW,CAACC,gBAAZ,IAAgC,EAAjC,EAAqC1F,IAAnD;YACA,OAAO9J,OAAO,CAACsH,SAAR,CAAkBiI,WAAW,CAAChK,OAA9B,EAAuC+D,OAAvC,CAAP;UACH,CAJE;UAKHqB,GAAG,EAAE,YAAY;YACb,OAAO4E,WAAW,CAAClN,KAAZ,CAAkBsD,gBAAlB,CAAmC,KAAnC,CAAP;UACH;QAPE,CAAP;MASH;IACJ;EACJ;;EAED,SAAStF,SAAT,GAAqB;IACjB,OAAO;MACHiH,SAAS,EAAEA,SADR;MAEHpG,IAAI,EAAE;QACFuO,QAAQ,EAAEA;MADR;IAFH,CAAP;;IAOA,SAASA,QAAT,CAAkB5J,OAAlB,EAA2B;MACvB,OAAO;QACHiI,MAAM,EAAEA;MADL,CAAP;;MAIA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;QACjB,IAAIjO,IAAI,CAACmI,SAAL,CAAepC,OAAO,CAAC8E,GAAvB,CAAJ,EAAiC,OAAOnJ,OAAO,CAACC,OAAR,EAAP;QAEjC,OAAOD,OAAO,CAACC,OAAR,CAAgBoE,OAAO,CAAC8E,GAAxB,EACFjJ,IADE,CACGqM,GAAG,IAAIjO,IAAI,CAACqI,YADf,EAEFzG,IAFE,CAEG,UAAUoB,IAAV,EAAgB;UAClB,OAAOhD,IAAI,CAACkI,SAAL,CAAelF,IAAf,EAAqBhD,IAAI,CAACiI,QAAL,CAAclC,OAAO,CAAC8E,GAAtB,CAArB,CAAP;QACH,CAJE,EAKFjJ,IALE,CAKG,UAAUsM,OAAV,EAAmB;UACrB,OAAO,IAAIxM,OAAJ,CAAY,UAAUC,OAAV,EAAmB8I,MAAnB,EAA2B;YAC1C1E,OAAO,CAAC4E,MAAR,GAAiBhJ,OAAjB;YACAoE,OAAO,CAAC6E,OAAR,GAAkBH,MAAlB;YACA1E,OAAO,CAAC8E,GAAR,GAAcqD,OAAd;UACH,CAJM,CAAP;QAKH,CAXE,CAAP;MAYH;IACJ;;IAED,SAAS1G,SAAT,CAAmBhG,IAAnB,EAAyB;MACrB,IAAI,EAAEA,IAAI,YAAYuD,OAAlB,CAAJ,EAAgC,OAAOrD,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;MAEhC,OAAOoO,gBAAgB,CAACpO,IAAD,CAAhB,CACFI,IADE,CACG,YAAY;QACd,IAAIJ,IAAI,YAAYqO,gBAApB,EACI,OAAOF,QAAQ,CAACnO,IAAD,CAAR,CAAewM,MAAf,EAAP,CADJ,KAGI,OAAOtM,OAAO,CAAC+M,GAAR,CACHzO,IAAI,CAACyE,OAAL,CAAajD,IAAI,CAAC8C,UAAlB,EAA8BoC,GAA9B,CAAkC,UAAU9B,KAAV,EAAiB;UAC/C,OAAO4C,SAAS,CAAC5C,KAAD,CAAhB;QACH,CAFD,CADG,CAAP;MAKP,CAVE,CAAP;;MAYA,SAASgL,gBAAT,CAA0BpO,IAA1B,EAAgC;QAC5B,IAAIsO,UAAU,GAAGtO,IAAI,CAACe,KAAL,CAAWsD,gBAAX,CAA4B,YAA5B,CAAjB;QAEA,IAAI,CAACiK,UAAL,EAAiB,OAAOpO,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;QAEjB,OAAOtB,OAAO,CAACsH,SAAR,CAAkBsI,UAAlB,EACFlO,IADE,CACG,UAAUmO,OAAV,EAAmB;UACrBvO,IAAI,CAACe,KAAL,CAAWqD,WAAX,CACI,YADJ,EAEImK,OAFJ,EAGIvO,IAAI,CAACe,KAAL,CAAWuD,mBAAX,CAA+B,YAA/B,CAHJ;QAKH,CAPE,EAQFlE,IARE,CAQG,YAAY;UACd,OAAOJ,IAAP;QACH,CAVE,CAAP;MAWH;IACJ;EACJ;AACJ,CAlxBD,EAkxBG,IAlxBH"},"metadata":{},"sourceType":"script"}